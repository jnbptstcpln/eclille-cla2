# Generated by Django 3.2.4 on 2022-01-28 12:21

import cla_reservation.models.bibli
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_summernote.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('cla_event', '0006_auto_20220122_1107'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cla_reservation', '0006_auto_20220121_2346'),
    ]

    operations = [
        migrations.CreateModel(
            name='BibliRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('description', django_summernote.fields.SummernoteTextField(help_text='Rappelle des éléments important tel que les différents chèques de cautions', verbose_name='Présentation')),
                ('file', models.FileField(blank=True, help_text='De préférence au format PDF ou Excel', null=True, upload_to=cla_reservation.models.bibli.FilePath.rules, verbose_name='Fichier')),
                ('available', models.BooleanField(default=False, verbose_name='Cette version est disponible à la consultation')),
            ],
            options={
                'verbose_name': '[BIBLI] Charte de la bibli',
                'verbose_name_plural': '[BIBLI] Chartes de la bibli',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='BlockedSlotBibli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='RÉSERVÉ', max_length=50, verbose_name='Nom')),
                ('start_date', models.DateField(help_text='Sert aussi pour définir le début de la récurrence', verbose_name='Date')),
                ('start_time', models.TimeField(verbose_name='Heure de début')),
                ('end_time', models.TimeField(verbose_name='Heure de fin')),
                ('recurring', models.BooleanField(default=False, verbose_name='Événement récurent')),
                ('recurring_days', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Lundi'), (2, 'Mardi'), (3, 'Mercredi'), (4, 'Jeudi'), (5, 'Vendredi'), (6, 'Samedi'), (0, 'Dimanche')], max_length=13, verbose_name='Jour(s) où ont lieu ce créneau selon la récurrence')),
                ('end_recurring', models.DateField(blank=True, null=True, verbose_name='Date de fin de la récurrence')),
                ('starts_on', models.DateTimeField(editable=False)),
                ('ends_on', models.DateTimeField(editable=False)),
                ('admin_display', models.BooleanField(default=False, verbose_name="Ce créneau apparait sur le planning de l'administration")),
                ('member_display', models.BooleanField(default=True, verbose_name='Ce créneau apparait sur le planning des cotisants')),
            ],
            options={
                'verbose_name': '[BIBLI] Créneau bloqué',
                'verbose_name_plural': '[BIBLI] Créneaux bloqués',
            },
        ),
        migrations.CreateModel(
            name='ReservationBibli',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_event', django_summernote.fields.SummernoteTextField(help_text='Précisez ici comment va être organisé votre événement, quelles activités seront proposées et quels seront vos besoins (électrique, équipements particulier, ...)', verbose_name="Description de l'événement")),
                ('description_user', django_summernote.fields.SummernoteTextField(help_text='Précisez ici dans quel cadre est organisée cette réservation et le nombre de personnes participantes', verbose_name="Description de l'événement")),
                ('start_date', models.DateField(help_text="Indiquez ici la date à partir de laquelle vous souhaitez occuper le lieu pour l'installation", verbose_name="Date de début de l'installation")),
                ('start_time', models.TimeField(help_text='Au format HH:MM (par exemple 18:30)', verbose_name="Heure de début de l'installation")),
                ('end_time', models.TimeField(help_text='Au format HH:MM (par exemple 01:00), elle correspond au moment où vous devez avoir rangé et nettoyé le lieu', verbose_name='Heure de fin du rangement')),
                ('multiple_days', models.BooleanField(default=False, help_text="Lors de la validation la durée totale d'occupation (installation et rangement) sera bien indiqué sur plusieurs jours", verbose_name="L'événement se déroule sur plusieurs jours")),
                ('manually_set_datetime', models.BooleanField(default=False, verbose_name='Définir manuellement les dates et horaires de début et de fin')),
                ('starts_on', models.DateTimeField(help_text='Calculée automatiquement sauf si la case précédente est cochée', verbose_name="Date et heure du début d'occupation")),
                ('ends_on', models.DateTimeField(help_text='Calculée automatiquement sauf si la case précédente est cochée', verbose_name="Date et heure de fin d'occupation")),
                ('sent', models.BooleanField(default=False, verbose_name='Envoyé')),
                ('sent_on', models.DateTimeField(default=None, editable=False, null=True, verbose_name='Envoyé le')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('validated', models.BooleanField(default=False, verbose_name="L'événement est validé et apparait sur le planning étudiant")),
                ('validated_on', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Validé le')),
                ('admin_display', models.BooleanField(default=False, verbose_name="L'événement apparait sur le planning de l'administration")),
                ('member_display', models.BooleanField(default=True, verbose_name="L'événement apparait sur le planning des cotisants")),
                ('rejected_for', django_summernote.fields.SummernoteTextField(blank=True, null=True, verbose_name='Raison du refus')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('event', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservation_bibli', to='cla_event.event', verbose_name='Réserver dans le cadre de cet événement')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Réserver à titre personnel par ce cotisant')),
                ('validated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': '[BIBLI] Réservation',
                'verbose_name_plural': '[BIBLI] Réservations',
                'ordering': ('-starts_on',),
            },
        ),
    ]
