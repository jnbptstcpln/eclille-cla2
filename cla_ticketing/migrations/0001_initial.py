# Generated by Django 3.2 on 2021-05-31 20:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_summernote.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DancingParty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name="Nom de l'événement")),
                ('description', django_summernote.fields.SummernoteTextField(blank=True, verbose_name="Présentation de l'événement")),
                ('organizer', models.CharField(max_length=100, verbose_name="Organisateur de l'événement")),
                ('event_starts_on', models.DateTimeField(verbose_name="Début de l'événement")),
                ('event_ends_on', models.DateTimeField(verbose_name="Fin de l'événement")),
                ('registration_starts_on', models.DateTimeField(verbose_name='Ouverture des inscriptions')),
                ('registration_ends_on', models.DateTimeField(verbose_name='Fermeture des inscriptions')),
                ('colleges', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('g1', 'G1'), ('g2', 'G2'), ('g3', 'G3'), ('alumni-centrale', 'Diplomé de Centrale'), ('ie1/ie2', 'IE1/IE2'), ('ie3', 'IE3'), ('ie4', 'IE4'), ('ie5', 'IE5'), ('alumni-iteem', "Diplomé de l'ITEEM")], max_length=57, verbose_name='Collèges autorisés à prendre une place')),
                ('places', models.PositiveIntegerField(default=400, verbose_name='Nombre de places')),
                ('ticketing_href', models.URLField(blank=True, help_text='Laisser vide si aucune', null=True, verbose_name="Lien vers la billeterie d'encaissement")),
            ],
            options={
                'verbose_name': 'Billetterie de soirée dansante',
                'verbose_name_plural': 'Billetteries de soirée dansante',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name="Nom de l'événement")),
                ('description', django_summernote.fields.SummernoteTextField(blank=True, verbose_name="Présentation de l'événement")),
                ('organizer', models.CharField(max_length=100, verbose_name="Organisateur de l'événement")),
                ('event_starts_on', models.DateTimeField(verbose_name="Début de l'événement")),
                ('event_ends_on', models.DateTimeField(verbose_name="Fin de l'événement")),
                ('registration_starts_on', models.DateTimeField(verbose_name='Ouverture des inscriptions')),
                ('registration_ends_on', models.DateTimeField(verbose_name='Fermeture des inscriptions')),
                ('colleges', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('g1', 'G1'), ('g2', 'G2'), ('g3', 'G3'), ('alumni-centrale', 'Diplomé de Centrale'), ('ie1/ie2', 'IE1/IE2'), ('ie3', 'IE3'), ('ie4', 'IE4'), ('ie5', 'IE5'), ('alumni-iteem', "Diplomé de l'ITEEM")], max_length=57, verbose_name='Collèges autorisés à prendre une place')),
                ('places', models.PositiveIntegerField(default=400, verbose_name='Nombre de places')),
                ('ticketing_href', models.URLField(blank=True, help_text='Laisser vide si aucune', null=True, verbose_name="Lien vers la billeterie d'encaissement")),
                ('allow_non_contributor_registration', models.BooleanField(default=False, verbose_name="Autoriser l'inscription des non cotisants")),
            ],
            options={
                'verbose_name': "Billetterie d'événement",
                'verbose_name_plural': "Billetteries d'événement",
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventRegistrationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Nom')),
                ('description', models.CharField(blank=True, max_length=250, verbose_name='Description')),
                ('price', models.FloatField(blank=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_types', to='cla_ticketing.event')),
            ],
            options={
                'verbose_name': 'Type de billet',
                'verbose_name_plural': 'Types de billet',
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_status', models.CharField(choices=[('contributor', 'Cotisant'), ('non_contributor', 'Non cotisant')], max_length=20, verbose_name="Statut de l'étudiant")),
                ('first_name', models.CharField(max_length=150, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=150, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Adresse mail personnelle')),
                ('phone', models.CharField(max_length=15, verbose_name='Numéro de téléphone')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Créateur de cette inscription')),
                ('event', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='cla_ticketing.event', verbose_name='Evénement')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='cla_ticketing.eventregistrationtype')),
                ('user', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Inscription à un événement',
                'verbose_name_plural': 'Inscriptions à un événement',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DancingPartyRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_status', models.CharField(choices=[('contributor', 'Cotisant'), ('non_contributor', 'Non cotisant')], max_length=20, verbose_name="Statut de l'étudiant")),
                ('first_name', models.CharField(max_length=150, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=150, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Adresse mail personnelle')),
                ('phone', models.CharField(max_length=15, verbose_name='Numéro de téléphone')),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('home', models.CharField(max_length=100, verbose_name='Logement après la soirée')),
                ('birthdate', models.DateField(verbose_name='Date de naissance')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Créateur de cette inscription')),
                ('dancing_party', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='cla_ticketing.dancingparty', verbose_name='Soirée dansante')),
                ('user', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Inscription en soirée dansante',
                'verbose_name_plural': 'Inscriptions en soirée dansante',
                'abstract': False,
            },
        ),
    ]
